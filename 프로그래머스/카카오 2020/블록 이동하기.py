"""
상하좌우 이동 및 90도 회전을 위한 리스트가 필요함.
로봇이 가로 방향일 때, 세로 방향일 때, 시계방향일 때, 반시계 방향일 때 회전의 조건이 다르므로, 분기

[
로봇의 상하좌우 이동 (0)
로봇이 가로방향일 때 (1)
    오른쪽을 기준으로 시계뱡항 90도 회전, 기준의 위쪽 블럭 검사
    오른쪽을 기준으로 반시계뱡항 90도 회전, 기준의 아래쪽 블럭 검사
    왼쪽을 기준으로 시계뱡항 90도 회전, 기준의 아래쪽 블럭 검사
    왼쪽을 기준으로 반시계뱡항 90도 회전, 기준의 위쪽 블럭 검사
로봇이 세로방향일 때 (2)
    위쪽을 기준으로 시계뱡항 90도 회전, 기준의 오른쪽 블럭 검사
    위쪽을 기준으로 반시계뱡항 90도 회전, 기준의 왼쪽 블럭 검사
    아래쪽을 기준으로 시계뱡항 90도 회전, 기준의 왼쪽 블럭 검사
    아래쪽을 기준으로 반시계뱡항 90도 회전, 기준의 오른쪽 블럭 검사
]
"""


def solution(board):
    def move_robot():
        return

    visited = [[0] * len(board) and len(board[0]) for _ in range(len(board))]
    visited[0][0], visited[0][1] = 1, 1
    moves = [
        [[-1, 1, 0, 0], [0, 0, -1, 1]],  # 상, 하, 좌, 우
        # [오른쪽 기준[시계방향[이동하는 칸, 검사 칸], 반시계방향], 왼쪽기준[]]
        [[[]], [[]]],
        []
    ]

    move_robot(board, visited, [[0, 0], [0, 1]])

    return answer
